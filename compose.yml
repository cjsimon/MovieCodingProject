version: '3'
services:
  api:
    container_name: api
    #
    #image: 
    # or
    build:
      context: ./api/
      dockerfile: Containerfile
      args:
        image_variant: development
    #
    restart: "no"
    #
    # Uncomment to override the service container's
    # default command and entrypoint for debugging
    #command: ""
    #entrypoint: /bin/bash # podman exec -i
    #tty: true             # podman exec -t
    #
    environment:
      APPLICATION_ENVIRONMENT: DEVELOPMENT
      APPLICATION_HOST:        '0.0.0.0'
      APPLICATION_PORT:        1234
    volumes:
      # Source code volume for live development from the host
      - ./api/src/:/usr/src/api/:Z
    networks:
      - web
    ports:
      - 1234:80
    links:
      - db
  
  app:
    container_name: app
    #
    #image: 
    # or
    build:
      context: ./app/
      dockerfile: Containerfile
      args:
        image_variant: development
    #
    restart: "no"
    #
    # Uncomment to override the service container's
    # default command and entrypoint for debugging
    #command: ""
    #entrypoint: /bin/bash # podman exec -i
    #tty: true             # podman exec -t
    #
    environment:
      APPLICATION_ENVIRONMENT: DEVELOPMENT
      APPLICATION_HOST:        '0.0.0.0'
      APPLICATION_PORT:        80
      API_HOST:                '0.0.0.0'
      API_PORT:                1234
    volumes:
      # Source code volume for live development from the host
      - ./app/src/:/usr/src/app/:Z
    networks:
      - web
    ports:
      - 80:80
  
  database:
    container_name: database
    image: mariadb:lts # TODO: Pull and manage this image from our private container registry
    restart: "no"
    #
    # Uncomment to override the service container's
    # default command and entrypoint for debugging
    #command: ""
    #entrypoint: /bin/bash # podman exec -i
    #tty: true             # podman exec -t
    #
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_USER: movie_app
      MYSQL_PASSWORD: movie_app1234
      MYSQL_DATABASE: movie_manager
    volumes:
      # Database conf files
      - ./database/conf.d/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:Z
      
      # Sql files to initialize the server with
      #
      # Note: Only scripts in that top-level directory
      #       are executed, in alphabetical order
      #
      - ./database/initdb/:/docker-entrypoint-initdb.d/:Z
      
      # Volume-out database data to the host
      - ./database/dbdata:/var/lib/mysql/:Z
    networks:
      - db
    ports:
      - 3306:3306

networks:
  web:
  db:
