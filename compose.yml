version: '3'

services:
  api:
    container_name: api
    depends_on:
      - database
    #
    #image: 
    # or
    build:
      context: ./api/
      dockerfile: Containerfile
      args:
        image_variant: development
    #
    restart: "no"
    #
    # Uncomment to override the service container's
    # default command and entrypoint for debugging
    #command: ""
    #entrypoint: /bin/bash # podman exec -i
    #tty: true             # podman exec -t
    #
    env_file: ./env/api.env
    environment: # Override default dev envvars from the env_file here
      # Set this envvar to true to create the database table schemas
      #
      # Note: Unless you're intending to recrate the database,
      #       this envvar should only need to be set true the
      #       first time the database service is started,
      #       without any existing databases.
      #
      #       After that first run, the appropriate database
      #       table schemas will exist, and the dbdata volume
      #       will persist database files on disk between runs
      #
      APPLICATION_INIT_DATABASE: false
    volumes:
      # Source code volume for live development from the host
      #
      # Note: You may comment out this volume to use the src/
      #       code that comes pre-built with this image variant
      - ./api/src/:/usr/src/app/:Z
    
  app:
    container_name: app
    depends_on:
      - api
    #
    #image: 
    # or
    build:
      context: ./app/
      dockerfile: Containerfile
      args:
        image_variant: development
    #
    restart: "no"
    #
    # Uncomment to override the service container's
    # default command and entrypoint for debugging
    #command: ""
    #entrypoint: /bin/bash # podman exec -i
    #tty: true             # podman exec -t
    #
    env_file: ./env/app.env
    #environment: # Override default dev envvars from the env_file here
    #  OVERRIDE_ENVVARS_HERE=sample
    volumes:
      # Source code volume for live development from the host
      #
      # Note: You may comment out this volume to use the src/
      #       code that comes pre-built with this image variant
      - ./app/src/:/usr/src/app/:Z
    
  database:
    container_name: database
    image: mariadb:lts # TODO: Pull and manage this image from our private container registry
    restart: "no"
    #
    # Uncomment to override the service container's
    # default command and entrypoint for debugging
    #command: ""
    #entrypoint: /bin/bash # podman exec -i
    #tty: true             # podman exec -t
    #
    env_file: ./env/database.env
    #environment: # Override default dev envvars from the env_file here
    #  OVERRIDE_ENVVARS_HERE=sample
    volumes:
      # Database conf files
      - ./database/conf.d/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:Z
      
      # Sql files to initialize the server with
      #
      # Note: Only scripts in that top-level directory
      #       are executed, in alphabetical order
      #
      - ./database/initdb/:/docker-entrypoint-initdb.d/:Z
      
      # Volume-out database data to the host
      - ./database/dbdata:/var/lib/mysql/:Z
    ports:
      - 3306:3306
  
  reverse-proxy:
    container_name: reverse-proxy
    depends_on:
      - api
      - app
    image: nginx:stable # TODO: Pull and manage this image from our private container registry
    restart: "no"
    #
    # Uncomment to override the service container's
    # default command and entrypoint for debugging
    #command: ""
    #entrypoint: /bin/bash # podman exec -i
    #tty: true             # podman exec -t
    #
    env_file: ./env/reverse-proxy.env
    #environment: # Override default dev envvars from the env_file here
    #  OVERRIDE_ENVVARS_HERE=sample
    volumes:
      # Nginx conf files
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:Z
      
      # Nginx Logs
      - ./reverse-proxy/logs/:/var/log/nginx/:Z
    ports:
      - 80:80     # App http server
      - 4321:4321 # Api http server
