version: '3'
services:
  api:
    container_name: api
    #
    #image: 
    # or
    build:
      context: ./api/
      dockerfile: Containerfile
      args:
        image_variant: development
    #
    labels:
      - "traefik.http.routers.api.rule=Host(`api.example.com`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
    restart: "no"
    environment:
      APPLICATION_ENVIRONMENT: DEVELOPMENT
      APPLICATION_HOST: '0.0.0.0'
      APPLICATION_PORT: 443
    volumes:
      # Source code volume for live development from the host
      - ./src/:/usr/src/api/:Z
    networks:
      - web
    ports:
      - 443:443
    links:
      - db
  
  app:
    container_name: app
    #
    #image: 
    # or
    build:
      context: ./app/
      dockerfile: Containerfile
      args:
        image_variant: development
    #
    labels:
      - "traefik.http.routers.app.rule=Host(`app.example.com`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=myresolver"
    restart: "no"
    environment:
      APPLICATION_ENVIRONMENT: DEVELOPMENT
      APPLICATION_HOST: '0.0.0.0'
      APPLICATION_PORT: 443
    volumes:
      # Source code volume for live development from the host
      - ./src/:/usr/src/app/:Z
    networks:
      - web
    ports:
      - 443:443
  
  database:
    container_name: database
    image: mariadb:lts # TODO: Pull and manage this image from our private container registry
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_USER: movie_app
      MYSQL_PASSWORD: movie_app1234
      MYSQL_DATABASE: movie_manager
    volumes:
      # Database conf files
      - ./conf.d/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:Z
      
      # Sql files to initialize the server with
      #
      # Note: Only scripts in that top-level directory
      #       are executed, in alphabetical order
      #
      - ./initdb/:/docker-entrypoint-initdb.d/:Z
      
      # Volume-out database data to host as a persistent, named volume
      - dbdata:/var/lib/mysql/:Z
    networks:
      - db
    ports:
      - 3306:3306
  
  traefik:
    image: traefik:v3.1.4
    command:
      - "--providers.docker=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=cjsimon333@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "certificates:/letsencrypt"
    networks:
      - web
    ports:
      - 443:443
    
volumes:
  certificates:
  dbdata:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=db-host,nolock,soft,rw"
      device: ":/mnt/dbdata"

networks:
  web:
  db:
