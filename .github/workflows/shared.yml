name: Shared Workflows

on:
  workflow_call:
    inputs:
      service_name:
        type: string
        description: The name of this service
        required: true
        default: app
      container_name:
        type: string
        description: The name of the container being built and pushed
        required: true
        default: ${service_name}
      containerfile_path:
        type: string
        description: The path to the Containerfile
        required: true
        default: ${service_name}/Containerfile
      image_variant:
        type: string
        description: The target image variant to build and push
        required: true
      
      # Flags to determine which of the jobs to run by the job using this workflow
      #
      # Note: I beleive a "parent" job using multiple "shared" jobs from this workflow
      #       will have those "shared" jobs executed in the order they are defined here
      #       under the `jobs:` label, *not* in the order the flags are passed in,
      #       in the "parent" job
      #
      run_input_validation:
        required: false
        type: boolean
        default: false
      run_authenticate_container_registry:
        required: false
        type: boolean
        default: false
      run_build_container:
        required: false
        type: boolean
        default: false
      run_push_container:
        required: false
        type: boolean
        default: false

jobs:
  # https://github.com/orgs/community/discussions/48373#discussioncomment-8755119
  input_validation:
    if: ${{ inputs.run_input_validation }}
    runs-on: ubuntu-latest
    steps:
      - name: Validate image_variant selection
        run: |
          if [[ ! "${{ github.event.inputs.image_variant }}" =~ ^(testing|development|staging|production)$ ]]; then
            echo "Invalid image_variant! Possible values are 'testing', 'development', 'staging' or 'production'"
            exit 1
          fi
  
  authenticate_container_registry:
    if: ${{ inputs.run_authenticate_container_registry }}
    runs-on: ubuntu-latest
    steps:
      - name: Login to the container registry
        run: doctl registry login
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  
  define_registry_variables:
    if: ${{ inputs.run_build_container || inputs.run_push_container }}
    runs-on: ubuntu-latest
    steps:
      # https://stackoverflow.com/questions/59810838/how-to-get-the-short-sha-for-the-github-workflow
      - name: Define registry variables
        id: define_registry_variables
        run: |
          echo "registry_url=${{ secrets.CONTAINER_REGISTRY_URL }}"     >> $GITHUB_OUTPUT
          
          echo "container_name=${{ inputs.container_name }}"            >> $GITHUB_OUTPUT
          echo "image_variant=${{ github.event.inputs.image_variant }}" >> $GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)"                >> $GITHUB_OUTPUT
          
          echo "base_tag=$container_name:$image_variant"                >> $GITHUB_OUTPUT
          
          echo "sha_tag=$base_tag-$short_sha"                           >> $GITHUB_OUTPUT
          #echo "branch_tag=$base_tag-$branch_name"                     >> $GITHUB_OUTPUT
          echo "latest_tag=$base_tag-latest"                            >> $GITHUB_OUTPUT
          
          echo "base_image_url=$registry_url/$base_tag:$image_variant"  >> $GITHUB_OUTPUT
          
          echo "sha_image_url=$base_image_url-$sha_tag"                 >> $GITHUB_OUTPUT
          echo "branch_image_url=$base_image_url-$branch_tag"           >> $GITHUB_OUTPUT
          echo "latest_image_url=$base_image_url-$latest_tag"           >> $GITHUB_OUTPUT
    outputs:
      # Expose defined registry variables
      # See: https://stackoverflow.com/questions/59175332/using-output-from-a-previous-job-in-a-new-one-in-a-github-action
      outputs: ${{ steps.define_registry_variables.outputs }}
  
  build_container:
    if: ${{ inputs.run_build_container }}
    runs-on: ubuntu-latest
    needs: [define_registry_variables]
    steps:
      - name: Checkout the git repo
        uses: actions/checkout@v4
        
      - name: Build the ${{ inputs.container_name }} container
        run: |
          podman build -t ${{ needs.define_registry_variables.outputs.sha_image_url }} -f ${{ github.event.inputs.containerfile_path }} .
          podman tag ${{ needs.define_registry_variables.outputs.sha_image_url }} ${{ needs.define_registry_variables.outputs.branch_image_url }}
  
  push_container:
    if: ${{ inputs.run_push_container }}
    runs-on: ubuntu-latest
    needs: [define_registry_variables]
    steps:
      - name: Checkout the git repo
        uses: actions/checkout@v4
      
      - name: Push the ${{ inputs.container_name }} container
        run: |
          podman push ${{ needs.define_registry_variables.outputs.outputs.vars.sha_image_url }} -f ${{ github.event.inputs.containerfile_path }}
          
          # Only push latest tag on master branch
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            podman tag ${{ needs.define_registry_variables.outputs.outputs.vars.sha_image_url }} ${{ needs.define_registry_variables.outputs.outputs.vars.latest_image_url }}
            podman push ${{ needs.define_registry_variables.outputs.outputs.vars.latest_image_url }}
          fi
